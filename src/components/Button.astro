---
const { variant = "primary", size = "medium", href } = Astro.props;

const buttonStyling = "font-display text-base text-black-500 hover:bg-blue-500 rounded-34 hover:text-white hover:shadow-none active:shadow-inner-50 transition ease-in-out shadow-drop-50 border border-black-500";
const variantClasses = {
    primary: "",
    secondary: "", 
};
const sizeClasses = {
  large: "w-full sm:w-[354px] lg:w-[719px] h-[104px] px-[52px] py-[12px] flex items-center justify-center",
  medium: "w-full sm:w-[354px] h-[104px] px-[52px] py-[12px] flex items-center justify-center",
  small: "w-full sm:w-[129px] h-[129px] px-[52px] py-[12px] flex items-center justify-center",
};
---

<div>
    {
      href ? (
        <a href={href} class:list={[buttonStyling, variantClasses[variant], sizeClasses[size], "group"]}>
          <slot />
          <svg class="ml-[22px] w-6 h-6 text-black-500 group-hover:text-white transition-colors duration-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      ) : (
        <button class:list={[buttonStyling, variantClasses[variant], sizeClasses[size], "group"]}>
          <slot />
          <svg class="ml-[22px] w-6 h-6 text-black-500 group-hover:text-white transition-colors duration-200" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      )
    }
</div>
